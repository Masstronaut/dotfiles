# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands

# Run Sketchybar together with AeroSpace
# sketchybar has a built-in detection of already running process,
# so it won't be run twice on AeroSpace restart
# Run a reload first, so that we don't launch it, startup sketchybar, then immediately reload it
# Reload is so that if sketchybar is already running it reloads the aerospace workspace info
# if sketchybar ISN'T running, --reload does nothing
# run sketchybar second, so that if it WASN'T running, it gets launched.
after-startup-command = ['exec-and-forget sketchybar --reload', 'exec-and-forget sketchybar']

# Start AeroSpace at login
start-at-login = true

# Notify sketchybar that it needs to rerender when changing workspace
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE'
]


# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Set finder windows to be floating by default
[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = "com.electron.asana"
run = ['move-node-to-workspace A']

[[on-window-detected]]
if.app-id = "company.thebrowser.Browser"
run = ['move-node-to-workspace B']

[[on-window-detected]]
if.app-id = "com.google.Chrome"
run = ['move-node-to-workspace B']

[[on-window-detected]]
if.app-id = "com.tinyspeck.slackmacgap"
run = ['move-node-to-workspace I']

[[on-window-detected]]
if.app-id = "com.hnc.Discord"
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = "com.apple.MobileSMS"
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = "md.obsidian"
run = ['move-node-to-workspace N']

[[on-window-detected]]
if.app-id = "com.apple.MobileSMS"
run = ['move-node-to-workspace S']

[[on-window-detected]]
if.app-id = "com.github.wez.wezterm"
run = ['move-node-to-workspace T']

[[on-window-detected]]
if.app-id = "notion.id"
run = ['move-node-to-workspace W']


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        30
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-cmd-ctrl-shift-slash = 'layout tiles horizontal vertical'
alt-cmd-ctrl-shift-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focu
alt-cmd-ctrl-shift-h = 'focus left'
alt-cmd-ctrl-shift-j = 'focus down'
alt-cmd-ctrl-shift-k = 'focus up'
alt-cmd-ctrl-shift-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-cmd-ctrl-h = 'move left'
alt-cmd-ctrl-j = 'move down'
alt-cmd-ctrl-k = 'move up'
alt-cmd-ctrl-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-cmd-ctrl-minus = 'resize smart -50'
alt-cmd-ctrl-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# In your config, you can drop workspace bindings that you don't need
alt-cmd-ctrl-shift-1 = 'workspace 1'
alt-cmd-ctrl-shift-2 = 'workspace 2'
alt-cmd-ctrl-shift-3 = 'workspace 3'
alt-cmd-ctrl-shift-4 = 'workspace 4'
alt-cmd-ctrl-shift-5 = 'workspace 5'
alt-cmd-ctrl-shift-6 = 'workspace 6'
alt-cmd-ctrl-shift-7 = 'workspace 7'
alt-cmd-ctrl-shift-8 = 'workspace 8'
alt-cmd-ctrl-shift-9 = 'workspace 9'
alt-cmd-ctrl-shift-a = 'workspace A' 
alt-cmd-ctrl-shift-b = 'workspace B'
alt-cmd-ctrl-shift-c = 'workspace C'
alt-cmd-ctrl-shift-d = 'workspace D'
alt-cmd-ctrl-shift-e = 'workspace E'
alt-cmd-ctrl-shift-f = 'workspace F'
alt-cmd-ctrl-shift-g = 'workspace G'
alt-cmd-ctrl-shift-i = 'workspace I'
alt-cmd-ctrl-shift-m = 'workspace M'
alt-cmd-ctrl-shift-n = 'workspace N'
alt-cmd-ctrl-shift-o = 'workspace O'
alt-cmd-ctrl-shift-p = 'workspace P'
alt-cmd-ctrl-shift-q = 'workspace Q'
alt-cmd-ctrl-shift-r = 'workspace R'
alt-cmd-ctrl-shift-s = 'workspace S'
alt-cmd-ctrl-shift-t = 'workspace T'
alt-cmd-ctrl-shift-u = 'workspace U'
alt-cmd-ctrl-shift-v = 'workspace V'
alt-cmd-ctrl-shift-w = 'workspace W'
alt-cmd-ctrl-shift-x = 'workspace X'
alt-cmd-ctrl-shift-y = 'workspace Y'
alt-cmd-ctrl-shift-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# Using an array makes it possible to run multiple commands
# This way we can also trigger a custom sketchybar event to handle the change

alt-cmd-ctrl-1 = ['move-node-to-workspace 1', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=1 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-2 = ['move-node-to-workspace 2', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=2 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-3 = ['move-node-to-workspace 3', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=3 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-4 = ['move-node-to-workspace 4', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=4 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-5 = ['move-node-to-workspace 5', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=5 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-6 = ['move-node-to-workspace 6', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=6 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-7 = ['move-node-to-workspace 7', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=7 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-8 = ['move-node-to-workspace 8', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=8 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-9 = ['move-node-to-workspace 9', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=9 FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-a = ['move-node-to-workspace A', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=A FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-b = ['move-node-to-workspace B', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=B FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-c = ['move-node-to-workspace C', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=C FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-d = ['move-node-to-workspace D', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=D FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-e = ['move-node-to-workspace E', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=E FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-f = ['move-node-to-workspace F', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=F FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-g = ['move-node-to-workspace G', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=G FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-i = ['move-node-to-workspace I', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=I FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-m = ['move-node-to-workspace M', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=M FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-n = ['move-node-to-workspace N', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=N FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-o = ['move-node-to-workspace O', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=O FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-p = ['move-node-to-workspace P', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=P FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-q = ['move-node-to-workspace Q', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=Q FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-r = ['move-node-to-workspace R', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=R FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-s = ['move-node-to-workspace S', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=S FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-t = ['move-node-to-workspace T', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=T FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-u = ['move-node-to-workspace U', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=U FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-v = ['move-node-to-workspace V', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=V FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-w = ['move-node-to-workspace W', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=W FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-x = ['move-node-to-workspace X', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=X FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-y = ['move-node-to-workspace Y', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=Y FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']
alt-cmd-ctrl-z = ['move-node-to-workspace Z', 'exec-and-forget sketchybar --trigger change-window-workspace TARGET_WORKSPACE=Z FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-cmd-ctrl-shift-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-cmd-ctrl-tab = ['move-workspace-to-monitor --wrap-around next', 'exec-and-forget sketchybar --trigger change-workspace-monitor TARGET_MONITOR=$(aerospace list-monitors --focused --format "%{monitor-appkit-nsscreen-screens-id}") TARGET_WORKSPACE=$(aerospace list-workspaces --focused)']

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

alt-cmd-ctrl-shift-space = 'layout floating tiling' #toggle between floating and tiling layout

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']
